{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","assets/hotbutt.jpg","assets/flies.jpg","assets/softhackle.jpg","assets/alpine.jpg","assets/port.jpg","Carousel.js","pages/Home.js","pages/Products.js","pages/Detail.js","components/Blog.js","pages/Blog.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","assets/logo.png","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","UPDATE_BLOGS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","blogs","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","QUERY_BLOGS","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Carousel","options","duration","onCycleTo","M","init","ref","style","height","one","two","three","four","five","Component","React","useRef","useState","App","headingText","styles","fontSize","fontWeight","rootElement","document","getElementById","ReactDOM","render","Products","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","BlogPage","post","title","date","toLocaleDateString","text","Blog","Jumbotron","children","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","logo","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","exact","path","component","Home","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","StrictMode","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b20eef9d.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n      db.createObjectStore('blogs', {keyPath: '_id'});\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_BLOGS = \"UPDATE_BLOGS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n  UPDATE_BLOGS\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n    case UPDATE_BLOGS:\n      return {\n        ...state,\n        blogs: [...action.blogs],\n      };\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n    blogs: []\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_BLOGS = gql`\n{\n  blogs {\n    _id\n    title\n    text\n    image\n    date\n  }\n}`\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div className= 'category'>\n      {/* <h2>Choose a Category:</h2> */}\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        {/* <span role=\"img\" aria-label=\"trash\"> */}\n        <span>\n            MY FLY BOX 🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","export default __webpack_public_path__ + \"static/media/hotbutt.86f3e08d.jpg\";","export default __webpack_public_path__ + \"static/media/flies.de2d10bf.jpg\";","export default __webpack_public_path__ + \"static/media/softhackle.fafe8354.jpg\";","export default __webpack_public_path__ + \"static/media/alpine.305e8737.jpg\";","export default __webpack_public_path__ + \"static/media/port.975a85e2.jpg\";","import React, { Component } from \"react\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport one from \"./assets/hotbutt.jpg\"; //chnage the path\nimport two from \"./assets/flies.jpg\";\nimport three from \"./assets/softhackle.jpg\";\nimport four from \"./assets/alpine.jpg\";\nimport five from \"./assets/port.jpg\";\n\nclass Carousel extends Component {\n  componentDidMount() {\n    const options = {\n      duration: 10,\n      onCycleTo: () => {\n        console.log(\"New Slide\");\n      }\n    };\n    M.Carousel.init(this.Carousel, options);\n\n    //Instance Plugin\n    // let instance = M.Carousel.getInstance(this.Carousel);\n    // instance.next(2);\n  }\n\n  render() {\n    return (\n      <div\n        ref={Carousel => {\n          this.Carousel = Carousel;\n        }}\n        className=\"carousel\"\n        style={{height: 600}}\n      >\n        <a className=\"carousel-item d-block w-25\">\n          <img alt=\"1\" src={one} />\n        </a>\n        <a className=\"carousel-item d-block w-25\">\n          <img alt=\"2\" src={two} />\n        </a>\n        <a className=\"carousel-item d-block w-25\">\n          <img alt=\"3\" src={three} />\n        </a>\n        <a className=\"carousel-item d-block w-25\">\n          <img alt=\"4\" src={four} />\n        </a>\n        <a className=\"carousel-item d-block w-25\">\n          <img alt=\"5\" src={five} />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { Component } from 'react';\nimport Jquery from \"jquery\"\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport M from \"materialize-css\";\nimport Carousel from \"../Carousel\";\nimport ReactDOM from \"react-dom\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\n\n\n\nconst {useEffect, useRef, useState} = React;\n\nfunction App() {\n  const { headingText } = styles;\n\n  return (\n    <div className=\"container\">\n      <h2 style={headingText} className=\"flow-text\">\n        Carousel React Demo\n      </h2>\n      <p className=\"flow-text\">\n        Learn how to use Materialize CSS framework in ReactJS\n      </p>\n      <Carousel />\n    </div>\n  );\n}\n\nconst styles = {\n  headingText: {\n    fontSize: 50,\n    fontWeight: 300\n  }\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\nexport default Carousel;\n\n  \n\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Products = () => {\n    return (\n        <div className=\"container\">\n            <CategoryMenu />\n            <ProductList />\n            <Cart />\n        </div>\n    );\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_BLOGS } from \"../utils/queries\";\nimport { UPDATE_BLOGS } from '../utils/actions';\nimport spinner from '../assets/spinner.gif';\nimport { idbPromise } from '../utils/helpers';\n\n// useEffect(() => {\n//     BlogPage()\n// }, [data])\n\nfunction BlogPage() {\n    const [state, dispatch] = useStoreContext();\n    const { loading, data } = useQuery(QUERY_BLOGS);\n\n    useEffect(() => {\n        if (data) {\n            dispatch({\n                type: UPDATE_BLOGS,\n                blogs: data.blogs,\n            });\n            data.blogs.forEach((post) => {\n                idbPromise('blogs', 'put', post);\n            });\n        } else if (!loading) {\n            idbPromise(\"blogs\", 'get').then((blogs) => {\n                dispatch({\n                    type: UPDATE_BLOGS,\n                    blogs: blogs,\n                });\n            });\n        }\n    }, [data, loading, dispatch])\n    console.log(data);\n    console.log(state);\n    return (\n        <div className=\"container my-1\">\n            <Link to=\"/\">← Back to Products</Link>\n            <h2>Blog Posts!</h2>\n\n            {state.blogs.length ? (\n                state.blogs.map((post) => {\n                    return (\n                        <div key={post._id} className=\"my-2\">\n                            <h3>\n                                <Link to={`/blogs/${post._id}`}>{post.title}</Link>\n                            </h3>\n                            <h4>\n                                {new Date(parseInt(post.date)).toLocaleDateString()}\n                            </h4>\n                            <div className=\"flex-row\">\n                                <img alt={`blog_id:${post._id}`} src={`images/${post.image}`} />\n                            </div>\n                            <text>{post.text}</text>\n                        </div>\n                    )\n                })) : (\n                <h4> no blogs added yet </h4>\n            )}\n            {loading ? <img src={spinner} alt=\"loading\" /> : null}\n\n        </div>\n    );\n}\n\nexport default BlogPage;","import React, { useEffect } from 'react';\nimport BlogPage from \"../components/Blog\";\n\nfunction Blog() {\n\nreturn (\n    <div className=\"container\">\n        <BlogPage></BlogPage>\n    </div>\n)\n\n\n\n};\n\nexport default Blog;\n\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","export default __webpack_public_path__ + \"static/media/logo.78b6c83b.png\";","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport logo from '../../assets/logo.png'\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n        <img className= \"logo\" src={logo} alt=\"BigCo Inc. logo\"/>\n\n        </Link>\n      </h1>\n      <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/products\">\n              Products\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/blogs\">\n              Blog Posts\n            </Link>\n          </li>\n      </ul>\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Products from './pages/Products';\nimport Detail from './pages/Detail';\nimport Blog from './pages/Blog'\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport BlogPage from './components/Blog';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  \n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path =\"/blogs\" component= {Blog} />\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/Products\" component={Products} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}